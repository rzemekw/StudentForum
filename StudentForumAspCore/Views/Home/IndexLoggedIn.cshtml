@model StudentForumAspCore.Models.IndexModel

@{
    ViewData["Title"] = "New Topics";
}

<div class="group-header" data-user-id="@ViewBag.UserId">
    <div class="group-name">
        <h2>New Topics</h2>
    </div>
</div>


<div id="topics-container">
    <div class="topic answers-hidden" id="future-topic" data-url="@Url.ActionLink("GetTopic", "Groups")">
        <div class="topic-group-name">
            <h4></h4>
        </div>
        <div class="topic-header">
            <h3></h3>
            <span></span>
        </div>
        <div class="topic-content">

        </div>
        <div class="topic-footer">
            <span class="show-answers" data-url="@Url.ActionLink("GetAnswers", "Groups")">Show answers</span>
            <span class="hide-answers">Hide answers</span>
        </div>
        <div class="topic-answers">
            <div class="topic-answer">
                <h4>@ViewBag.Name</h4>
                <form class="topic-answer-form" asp-action="Answer" asp-controller="Groups">
                    <textarea rows="1" name="Content" placeholder="Write your answer"></textarea>
                    <div class="attachments">
                    </div>
                    <input hidden name="TopicId" />
                    <div class="topic-answer-form-footer">
                        <span class="add-attachments">Add attachments</span>
                        <input type="file" hidden multiple />
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>

    @foreach (var topic in Model.UnseenTopics)
    {
        <div class="topic answers-hidden" data-groupId="@topic.GroupId" data-id="@topic.Id">
            <div class="topic-group-name">
                <h4>@topic.Group.Name</h4>
            </div>
            <div class="topic-header">
                <h3>@topic.Author.FirstName @topic.Author.LastName</h3>
                <i class="fas fa-exclamation-circle new-topic-icon"></i>
                <span data-date="@Json.Serialize(topic.Date).ToString().Trim('\"')"></span>
            </div>
            <div class="topic-content">
                @topic.Name
            </div>
            <div class="topic-footer">
                <span class="show-answers" data-url="@Url.ActionLink("GetAnswers", "Groups", new { topicId = topic.Id })">Show answers</span>
                <span class="hide-answers">Hide answers</span>
            </div>
            <div class="topic-answers">
                <div class="topic-answer">
                    <h4>@ViewBag.Name</h4>
                    <form class="topic-answer-form" asp-action="Answer" asp-controller="Groups">
                        <textarea rows="1" name="Content" placeholder="Write your answer"></textarea>
                        <div class="attachments">
                        </div>
                        <input hidden name="TopicId" value="@topic.Id" />
                        <div class="topic-answer-form-footer">
                            <span class="add-attachments">Add attachments</span>
                            <input type="file" hidden multiple />
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }

    @foreach (var topic in Model.TopicsWithNewAnswers)
    {
        <div class="topic answers-hidden" data-groupId="@topic.GroupId" data-id="@topic.Id">
            <div class="topic-group-name">
                <h4>@topic.Group.Name</h4>
            </div>
            <div class="topic-header">
                <h3>@topic.Author.FirstName @topic.Author.LastName</h3>
                <i class="fas fa-exclamation-circle new-answer-icon"></i>
                <span data-date="@Json.Serialize(topic.Date).ToString().Trim('\"')"></span>
            </div>
            <div class="topic-content">
                @topic.Name
            </div>
            <div class="topic-footer">
                <span class="show-answers" data-url="@Url.ActionLink("GetAnswers", "Groups", new { topicId = topic.Id })">Show answers</span>
                <span class="hide-answers">Hide answers</span>
            </div>
            <div class="topic-answers">
                <div class="topic-answer">
                    <h4>@ViewBag.Name</h4>
                    <form class="topic-answer-form" asp-action="Answer" asp-controller="Groups">
                        <textarea rows="1" name="Content" placeholder="Write your answer"></textarea>
                        <div class="attachments">
                        </div>
                        <input hidden name="TopicId" value="@topic.Id" />
                        <div class="topic-answer-form-footer">
                            <span class="add-attachments">Add attachments</span>
                            <input type="file" hidden multiple />
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            function getAndAppendAnswer(answerId, topicId) {
                var url = new URL("@Url.ActionLink("GetAnswer", "Groups")");
                var params = { id: answerId }
                url.search = new URLSearchParams(params).toString();

                fetch(url).then(r => r.json())
                    .then(answer => {

                        var aDiv = $('<div class="topic-answer"><div class="topic-answer-header"><h4></h4><span></span></div><p></p></div>');
                        aDiv.find('h4').text(answer.author.firstName + " " + answer.author.lastName);
                        aDiv.find('span').data('date', answer.date);
                        aDiv.find('span').text(displayDate(new Date(answer.date)));
                        aDiv.find('p').text(answer.content);

                        $('input[name="TopicId"]').filter(function () {
                            return $(this).val() == topicId;
                        }).parents('.topic-answer').before(aDiv);
                    });
            }

            function getAndAppendTopic(groupId, topicId, newAnswer) {
                var url = new URL($('#future-topic').data('url'));
                var params = { id: topicId }
                url.search = new URLSearchParams(params).toString();

                fetch(url).then(r => r.json())
                    .then(topic => {
                        var futureTopic = $('#future-topic');
                        var newTopic = futureTopic.clone(true);
                        futureTopic.after(newTopic);

                        newTopic.removeAttr('id');

                        newTopic.data('groupId', groupId)
                        newTopic.data('id', topicId)

                        newTopic.find('.topic-group-name h4').text(topic.group.name);

                        newTopic.find('.topic-header h3').text(topic.author.firstName + " " + topic.author.lastName);

                        var i = $('<i class="fas fa-exclamation-circle"></i>');
                        if (newAnswer)
                            i.addClass('new-answer-icon');
                        else
                            i.addClass('new-topic-icon');

                        newTopic.find('.topic-header h3').after(i);

                        newTopic.find('.topic-header span').data('date', topic.date);
                        newTopic.find('.topic-header span').text(displayDate(new Date(topic.date)));

                        newTopic.find('.topic-content').text(topic.name);
                        newTopic.find('input[name="TopicId"]').val(topic.id);

                        var url = new URL(newTopic.find('.show-answers').data('url'));
                        var params = { topicId: topic.id }
                        url.search = new URLSearchParams(params).toString();
                        newTopic.find('.show-answers').data('url', url);
                    });
            }

            connection.on("TopicCreated", function (groupId, topicId) {
                getAndAppendTopic(groupId, topicId, false);
            });

            connection.on("AnswerCreated", function (groupId, topicId, answerId, userId) {
                var topic = $('.topic').filter(function () {
                    return $(this).data('id') == topicId;
                });

                if (!topic.length) {
                    getAndAppendTopic(groupId, topicId, true);
                    return;
                }

                if (!topic.hasClass('answers-hidden')) {
                    getAndAppendAnswer(answerId, topicId);
                }
                else {
                    if (topic.find('.topic-header .new-answer-icon').length)
                        return;
                    if ($('.group-header').data('user-id') == userId)
                        return;

                    topic.find('.topic-header').append($('<i class="fas fa-exclamation-circle new-answer-icon"></i>'));
                }
            });
        })


    </script>
}